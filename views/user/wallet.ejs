<%- include("../../views/partials/user/header") %>

<link rel="stylesheet" href="user/css/profile.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

<!-- Breadcrumb Section -->
<section class="breadcrumb-section set-bg container-fluid my-3" data-setbg="user/img/image.png">
    <div class="container text-center">
        <div class="breadcrumb__text">
            <h2>Wallet</h2>
            <div class="breadcrumb__option">
                <a href="/">Home</a>
                <span>Wallet</span>
            </div>
        </div>
    </div>
</section>

<div class="container">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-3">
            <div class="sidebar__item">
                <div class="hero__categories mt-3" style="box-shadow: 1px 1px 8px 0 lightgray;">
                    <div class="hero__categories__all">
                        <a href="/userProfile"><span>Personal Info</span></a>
                    </div>
                    <div class="hero__categories__all">
                        <a href="/myAddresses"><span>My Addresses</span></a>
                    </div>
                    <div class="hero__categories__all">
                        <a href="/myOrders"><span>My Orders</span></a>
                    </div>
                    <div class="hero__categories__all active">
                        <a href="/wallet"><span>Wallet</span></a>
                    </div>
                    <div class="hero__categories__all">
                        <a href="/logout"><span>Logout</span></a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Wallet Section -->
        <div class="col-lg-9">
            <!-- Wallet Card -->
            <div class="text-center">
                <div class="card shadow-sm p-4" style="background: linear-gradient(135deg, #6a11cb, #2575fc); color: white; border-radius: 15px; max-width: 350px; margin: auto; position: relative;">
                    <h6 style="opacity: 0.8;"><%= user.name.toUpperCase() %></h6>
                    <h2 class="my-2" style="color: white;"><strong>₹ <%= wallet.balance %></h2></strong>
                    <p style="color: #FFD700; font-weight: bold;"><%= wallet.walletId %></p>
                    <div style="position: absolute; bottom: 15px; right: 15px; opacity: 0.5;">
                        <i class="fas fa-credit-card fa-2x"></i>
                    </div>
                </div>
                <button id="topup" class="btn btn-dark mt-3" data-bs-toggle="modal">Topup</button>
            </div>

            <!-- Wallet Activity -->
            <div class="card shadow-sm p-4 mt-4">
                <h4>Wallet Activity</h4>
                <p class="text-muted">Your recent transactions</p>
                <ul class="list-group mt-3">
                    <% if (transactions.length === 0) { %>
                        <p class="text-muted text-center">No transactions yet.</p>
                    <% } else { %>
                        <% transactions.forEach(transaction => { %>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center gap-3">
                                    <% 
                                        let transactionType = "";
                                        let iconClass = "";
                                        let textClass = "";
                                        
                                        switch(transaction.transactionType) {
                                            case "Topup":
                                                transactionType = "Top-up";
                                                iconClass = "fas fa-plus-circle text-primary";
                                                textClass = "text-primary";
                                                break;
                                            case "Debit":
                                                transactionType = "Debit";
                                                iconClass = "fas fa-minus-circle text-danger";
                                                textClass = "text-danger";
                                                break;
                                            case "Refund":
                                                transactionType = "Refund";
                                                iconClass = "fas fa-undo text-success";
                                                textClass = "text-success";
                                                break;
                                            case "Cashback":
                                                transactionType = "Cashback";
                                                iconClass = "fas fa-gift text-warning";
                                                textClass = "text-warning";
                                                break;
                                            default:
                                                transactionType = "Unknown";
                                                iconClass = "fas fa-question-circle text-muted";
                                                textClass = "text-muted";
                                        }
                                    %>
                                    <span class="badge p-2" style="border-radius: 50%; border: none;">
                                        <i class="<%= iconClass %> fa-2x"></i>
                                    </span>
                                    <div>
                                        <strong><%= transactionType %></strong>
                                        <p class="text-muted mb-0"><%= transaction.date.toLocaleString() %></p>
                                    </div>
                                </div>
                                <div>
                                    <strong class="<%= textClass %>">
                                        ₹<%= transaction.amount %>
                                    </strong>
                                </div>
                            </li>
                        <% }); %>
                    <% } %>
                </ul>
                
                <!-- Pagination -->
                <nav aria-label="Page navigation example" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="/wallet?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                    </ul>
                </nav>

            </div>
        </div>
    </div>
</div>

<%- include("../../views/partials/user/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>

document.getElementById('topup').addEventListener('click', () => {
    Swal.fire({
        title: 'Top-Up Balance',
        input: 'number',
        inputLabel: 'Enter amount to top-up',
        inputAttributes: {
            min: 1,
            step: 1
        },
        inputPlaceholder: 'Enter amount',
        showCancelButton: true,
        confirmButtonText: 'Top Up',
        preConfirm: (amount) => {
            amount = Number(amount)
            if (!amount || amount <= 0) {
                Swal.showValidationMessage('Please enter a valid amount');
                return false;
            }
            return amount;
        }
    }).then((result) => {
        if (result.isConfirmed) {
            const amount = result.value;

            fetch('/razorpayOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ amount, authSkip: true })
            })
            .then(res => res.json())
            .then(data => {
                if (!data || data.error) {
                    console.log('data terminated')
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Payment initiation failed.'
                    });
                    return;
                }

                console.log('razorpay options ')
                const options = {
                    key: data.key,
                    amount: data.amount,
                    currency: "INR",
                    name: "Craftaraah Ecommerce",
                    description: "Wallet Topup",
                    order_id: data.orderId,
                    handler: function (response) {
                        console.log("Payment response:", response);

                        fetch('/verifyPayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                paymentId: response.razorpay_payment_id,
                                razorOrderId: response.razorpay_order_id,
                                signature: response.razorpay_signature
                            })
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.status) {
                                fetch('/topupWallet', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({ amount })
                                })
                                .then(res => res.json())
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Topup Success',
                                            text: `₹ ${amount} added to the wallet`,
                                            timer: 1500,
                                            showConfirmButton: false
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Topup Failed',
                                            text: 'Failed to topup the amount',
                                            timer: 1500,
                                            showConfirmButton: false
                                        });
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Verification Failed',
                                    text: 'Could not verify the payment'
                                });
                            }
                        })
                        .catch(err => {
                            console.error("Error verifying payment:", err);
                            window.location.href = "/orderFailure";
                        });
                    },
                    theme: {
                        color: "#F37254"
                    }
                };

                console.log('razorpay options : ',options)

                const razorpay = new Razorpay(options);

                razorpay.on('payment.failed', function (response) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: response.error.description || 'Payment process was not completed.'
                    });
                });

                razorpay.open();
            });
        }
    });
});



</script>
