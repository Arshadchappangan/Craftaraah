<%- include("../../views/partials/admin/header") %>

    <head>
        <!-- Cropper.js CSS -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
    </head>

    <style>
        .error-message {
            color: red;
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
        }

        /* Crop Modal Styling */
        #cropModal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
            z-index: 1001;
            text-align: center;
        }

        #cropModal img {
            max-width: 100%;
            max-height: 400px;
        }

        #overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            z-index: 1000;
        }
    </style>

    <section class="container justify-content-center">
        <div class="row justify-content-center">
            <div class="col-9">
                <h3 class="fw-bold my-3">Add new product</h3>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">

                        <form id="productForm" enctype="multipart/form-data" onsubmit="submitForm(event)">
                            <div class="row">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" placeholder="Type here" name="productName"
                                        class="form-control border" id="product-name">
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="mb-4">
                                    <label class="form-label">Full description</label>
                                    <textarea placeholder="Type here" id="description" name="description"
                                        class="form-control border" rows="4"></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="mb-4">
                                    <label class="form-label">Specifications</label>
                                    <textarea placeholder="Type product specifications seperated by hyphen (-) ..." id="specification" name="specification"
                                        class="form-control border" rows="4"></textarea>
                                    <div id="specification-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 mb-4">
                                    <label for="product_name" class="form-label">Price</label>
                                    <input type="text" placeholder="â‚¹" name="price" class="form-control border"
                                        id="price">
                                    <div id="price-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-6 mb-4">
                                    <label for="product_name" class="form-label">Category</label>
                                    <select class="form-select border" name="category" id="category">
                                        <option value="" disabled selected>Choose one</option>
                                        <%for(let i=0;i<category.length;i++){%>
                                            <option value="<%=category[i].name%>">
                                                <%=category[i].name%>
                                            </option>
                                            <%}%>
                                    </select>

                                    <div id="category-error" class="error-message"></div>
                                </div>
                            </div>


                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>

                                <input type="file" id="imageInput" accept="image/png, image/jpeg, image/jpg" onchange="previewImages(event)">
                                <div id="image-error" class="error-message"></div>
                                <div id="previewContainer" class="d-flex flex-wrap mt-2"></div>
                                <div id="cropModal">
                                    <h4>Crop image</h4>
                                    <img id="cropImage">
                                    <br><br>
                                    <button type="button" class="btn btn-outline-primary"
                                        onclick="saveCroppedImage()">Crop &
                                        Save</button>
                                    <button class="btn btn-outline-secondary" onclick="closeCropModal()">Cancel</button>
                                </div>
                            </div>
                            <div>
                                <input class="btn btn-outline-primary rounded font-sm hover-up my-4" type="submit"
                                    value="Add product" onclick="validateAndSubmit(event)">
                            </div>

                    </div>

                    </form>
                </div>
            </div>
        </div>
        </div>
    </section>

    <div id="overlay"></div>




    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>


    <script>
        function validateAndSubmit(event) {
            event.preventDefault();

            if (!validateForm()) return;

            const formData = new FormData(document.getElementById('productForm'));

            croppedImages.forEach((blob, index) => {
                formData.append('croppedImages', blob, `image${index + 1}.jpg`);
            });

            fetch('/admin/addProducts', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (response.ok) {
                    alert('Product added successfully!');
                    window.location.href = "/admin/products";
                } else {
                    alert('Failed to add product.');
                }
            })
            .catch(err => {
                console.error('Upload error:', err);
            });
        }



        let cropper;
        let currentImageElement;

        let selectedFiles = [];
        let croppedImages = [];
        let currentFileIndex = 0;

function previewImages(event) {
    const file = event.target.files[0];
    if (!file) return;
    
    openCropperForFile(file);
}

function openCropperForFile(file) {
    const reader = new FileReader();
    reader.onload = function (e) {
        const cropImage = document.getElementById('cropImage');
        cropImage.onload = function () {
            if (cropper) cropper.destroy();
            cropper = new Cropper(cropImage, {
                aspectRatio: 1,
                viewMode: 1,
                autoCropArea: 1,
                background: false,
            });
        };

        cropImage.src = e.target.result;
        document.getElementById('cropModal').style.display = "block";
        document.getElementById('overlay').style.display = "block";
    };
    reader.readAsDataURL(file);
}

function saveCroppedImage() {
    if (!cropper) return;

    cropper.getCroppedCanvas().toBlob((blob) => {
        const croppedURL = URL.createObjectURL(blob);
        croppedImages.push(blob);

        displayCroppedImages();
        
        cropper.destroy();
        document.getElementById('cropModal').style.display = "none";
        document.getElementById('overlay').style.display = "none";

        document.getElementById('imageInput').value = "";
    });
}

function displayCroppedImages() {
    const previewContainer = document.getElementById('previewContainer');
    previewContainer.innerHTML = "";

    croppedImages.forEach((blob) => {
        const imgURL = URL.createObjectURL(blob);
        const imgElement = document.createElement("img");
        imgElement.src = imgURL;
        imgElement.classList.add("img-thumbnail");
        imgElement.style.width = "120px";
        imgElement.style.maxHeight = "100px";
        imgElement.style.objectFit = "contain";
        imgElement.style.margin = "5px";
        previewContainer.appendChild(imgElement);
    });
}

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementById('product-name').value.trim();
            const description = document.getElementById('description').value.trim();
            const specification = document.getElementById('specification').value.trim();
            const price = document.getElementById('price').value;
            const category = document.getElementById('category').value;
            const imageInput = document.getElementById('imageInput');
            let isValid = true;

            if (name === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
                isValid = false;
            }

            if (description === "") {
                displayErrorMessage('description-error', 'Please enter the description for product.');
                isValid = false;
            }

            if (specification === "") {
                displayErrorMessage('specification-error', 'Please enter the specifications for product.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('price-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!category) {
                displayErrorMessage('category-error', 'Please choose one category')
                isValid = false;
            }

            if (croppedImages.length === 0) {
                displayErrorMessage('image-error', 'Please select at least one image.');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
        }

    </script>