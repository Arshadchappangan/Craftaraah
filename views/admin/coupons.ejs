<%-include("../../views/partials/admin/header")%>

<style>
  .error-message {
    color: red;
    text-align: center;
  }
</style>

<div class="container">
  <div class="page-inner">
    <div class="d-flex justify-content-between align-items-left align-items-md-center flex-column flex-md-row pt-2 pb-4">
      <div>
        <h3 class="fw-bold mb-3">Coupons</h3>
      </div>
      <div style="width: 500px; margin-bottom: 30px;">
        <nav class="nav-search p-0 d-none d-lg-flex">
          <form class="input-group" action="/admin/coupon" method="get" id="searchForm" onsubmit="searchSubmit(event)">
            <div class="input-group-prepend">
              <button type="submit" class="btn btn-search pe-1">
                <i class="fa fa-search search-icon"></i>
              </button>
            </div>
            <input id="searchInput" name="search" type="text" placeholder="Search ..." class="form-control" />
          </form>
        </nav>
      </div>
    </div>

    <div class="row">
      <!-- Left Side: Coupon Table -->
      <div class="col-md-9">
        <div class="card card-round">
          <div class="card-header d-flex justify-content-between">
            <div class="card-head-row card-tools-still-right">
              <div class="card-title">Coupon Details</div>
            </div>
            <button class="btn btn-primary" id="clear-btn">Clear search</button>
          </div>
          <div class="card-body p-0">
            <div class="table-responsive">
              <table class="table align-items-center mb-0">
                <thead class="thead-light">
                  <tr>
                    <th class="text-start">Code</th>
                    <th class="text-start">Discount</th>
                    <th class="text-start">Expiry Date</th>
                    <th class="text-end">Status</th>
                    <th class="text-end">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% coupons.forEach((coupon, ind) => { %>
                  <tr>
                    <td class="text-start"><%= coupon.couponCode %></td>
                    <%if(coupon.couponType === 'percentage'){ %>
                    <td class="text-start"><%= coupon.discountAmount %> %</td>
                    <%}else{%>
                      <td class="text-start">₹ <%= coupon.discountAmount %></td>
                      <%}%>
                    <td class="text-start"><%= new Date(coupon.expiryDate).toLocaleDateString()%></td>
                    <td class="text-end">
                      <% if (coupon.isActive) { %>
                      <button class="badge badge-success">Active</button>
                      <i class="fas fa-sync ms-2 text-dark" onclick="confirmDeactivate('<%= coupon._id %>')"></i>
                      <% } else { %>
                      <button class="badge badge-danger">Inactive</button>
                      <i class="fas fa-sync ms-2 text-dark" onclick="confirmActivate('<%= coupon._id %>')"></i>
                      <% } %>
                    </td>
                    <td class="text-end">
                      <i class="fas fa-pencil-alt mx-2 text-dark" onclick='loadCouponToForm(<%- JSON.stringify(coupon) %>)'></i>
                      <i class="fas fa-archive mx-2" onclick="confirmArchive('<%= coupon._id %>')"></i>
                    </td>
                  </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Side: Create Coupon -->
      <div class="col-md-3">
        <div class="card">
          <div class="card-body">
            <h5 id="form-card" class="card-title">Create Coupon</h5>
            <form id="coupon-form" method="post" action="/admin/addCoupon">
              <div class="mb-4">
                <label class="form-label">Coupon Code</label>
                <input type="text" name="code" class="form-control" id="coupon_code" placeholder="Type here" />
                <div id="code-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Coupon Type</label>
                <select type="" name="type" class="form-control" id="coupon_type">
                    <option value="" disabled selected>Choose One</option>
                    <option value="percentage">Percentage (%)</option>
                    <option value="fixed">Fixed Amount (₹)</option>
                </select>
                <div id="coupon_type-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Discount</label>
                <input type="number" name="discount" class="form-control" id="discount_value" placeholder="Type here" />
                <div id="discount-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Minimum Purchase Amount</label>
                <input type="number" name="minAmount" class="form-control" id="min_amount" placeholder="Type here" />
                <div id="min_amount-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Max Discount Amount</label>
                <input type="number" name="maxDiscount" class="form-control" id="max_discount" placeholder="Type here" />
                <div id="max_discount-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Usage Limit</label>
                <input type="number" name="usageLimit" class="form-control" id="usage_limit" placeholder="Type here" />
                <div id="usage_limit-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Expiry Date</label>
                <input type="date" name="expiryDate" class="form-control" id="expiry_date" placeholder="Type here" />
                <div id="expiry_date-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button id="btn-submit" class="btn btn-primary" type="submit">Create Coupon</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- pagination here -->

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

            const couponTypeSelect = document.getElementById("coupon_type");
            const maxDiscountInput = document.getElementById("max_discount");

            couponTypeSelect.addEventListener("change", function () {
                if (this.value === "fixed") {
                maxDiscountInput.disabled = true;
                maxDiscountInput.value = "Nil";
                } else {
                maxDiscountInput.disabled = false;
                }
            });

        document.getElementById('coupon-form').addEventListener('submit', handleFormSubmission);
          

        function handleFormSubmission(event) {
            event.preventDefault();

            const code = document.getElementById("coupon_code").value.trim();
            const type = document.getElementById("coupon_type").value.trim();
            const discount = document.getElementById("discount_value").value.trim();
            const minAmount = document.getElementById("min_amount").value.trim();
            const maxDiscount = document.getElementById("max_discount").value.trim();
            const usageLimit = document.getElementById("usage_limit").value.trim();
            const expiryDate = document.getElementById("expiry_date").value.trim();
            const formAction = document.getElementById('coupon-form').action;


            if (!validateForm()) return;

            let body = {
                code,
                type,
                discount,
                minAmount,
                maxDiscount,
                usageLimit,
                expiryDate
            };

                fetch(formAction, {
                    method : "POST",
                    headers: { "content-type": "application/json" },
                    body: JSON.stringify(body)
                })
                .then(response => {
                    if(!response.ok){
                        return response.json().then(err => {
                            throw new Error(err.error);
                        })
                    }
                    return response.json();
                })
                .then(data => {
                  Swal.fire({
                      icon: "success",
                      title: "Success",
                      text: data.message || "Operation completed successfully!" 
                  }).then(() => {
                      setTimeout(() => {
                          location.reload();
                      }, 1500);

                  });
              })
              .catch(error => {
                  Swal.fire({
                      icon: "error",
                      title: "Oops...",
                      text: error.message || "Something went wrong!"
                  });
              });
        }


      function validateForm() {

        const code = document.getElementById("coupon_code").value.trim();
        const type = document.getElementById("coupon_type").value.trim();
        const discount = document.getElementById("discount_value").value.trim();
        const minAmount = document.getElementById("min_amount").value.trim();
        const maxDiscount = document.getElementById("max_discount").value.trim();
        const usageLimit = document.getElementById("usage_limit").value.trim();
        const expiryDate = document.getElementById("expiry_date").value.trim();

        clearErrorMessages();
        let isValid = true;
        

        if (code === "") {
          displayErrorMessage("code-error", "Please enter coupon code");
          isValid = false;
        }

        if (type === "") {
          displayErrorMessage("coupon_type-error", "Please select coupon type");
          isValid = false;
        }

        if (discount === "") {
          displayErrorMessage("discount-error", "Please enter discount value");
          isValid = false;
        } else if (type === 'percentage' && discount > 100 || discount < 1) {
          displayErrorMessage("discount-error", "Enter a valid discount between 1 and 100");
          isValid = false;
        }else if (isNaN(discount) || discount <= 0 && type === 'fixed') {
          displayErrorMessage("discount-error", "Enter a valid discount amount");
          isValid = false;
        }

        if (minAmount === "" || minAmount <= 0) {
          displayErrorMessage("min_amount-error", "Please enter minimum purchase amount");
          isValid = false;
        }

        if (type === 'fixed') {
            return true;
        }else{
            if (maxDiscount === "" || maxDiscount <= 0) {
            displayErrorMessage("max_discount-error", "Please enter maximum discount amount");
            isValid = false;
            }
        }

        if (usageLimit === "" || usageLimit <= 0) {
          displayErrorMessage("usage_limit-error", "Please enter usage limit");
          isValid = false;
        }

        if (expiryDate === "") {
          displayErrorMessage("expiry_date-error", "Please select expiry date");
          isValid = false;
        } else {
          const today = new Date();
          const selectedDate = new Date(expiryDate);
          if (selectedDate < today) {
            displayErrorMessage("expiry_date-error", "Expiry date must be in the future");
            isValid = false;
          }
        }

        return isValid;
      }

      function displayErrorMessage(id, message) {
        const el = document.getElementById(id);
        el.innerText = message;
        el.style.display = "block";
      }

      function clearErrorMessages() {
        document.querySelectorAll(".error-message").forEach(el => {
          el.innerHTML = "";
          el.style.display = "none";
        });
      }

      function confirmActivate(id) {
        Swal.fire({
          title: "Activate coupon?",
          icon: "info",
          showCancelButton: true,
          confirmButtonColor: "#28a745",
          confirmButtonText: "Activate"
        }).then(result => {
          if (result.isConfirmed) {
            fetch(`/admin/activateCoupon?id=${id}`, {
              method: 'GET',
              headers: {
                'Accept': 'application/json'
              }
            })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                Swal.fire("Activated!", data.message, "success");
                setTimeout(() => location.reload(), 1500);
              } else {
                Swal.fire("Failed", data.message, "error");
              }
            }).catch(err => {
              Swal.fire("Error", "Network error occurred.", "error");
            });
          }
        });
      }

      function confirmDeactivate(id) {
        Swal.fire({
          title: "Deactivate coupon?",
          text: "Are you sure you want to deactivate this coupon?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          confirmButtonText: "Deactivate"
        }).then(result => {
          if (result.isConfirmed) {
            fetch(`/admin/deactivateCoupon?id=${id}`, {
              method: 'GET',
              headers: {
                'Accept': 'application/json'
              }
            })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                Swal.fire("Deactivated!", data.message, "success");
                setTimeout(() => location.reload(), 1500);
              } else {
                Swal.fire("Failed", data.message, "error");
              }
            }).catch(err => {
              Swal.fire("Error", "Network error occurred.", "error");
            });
          }
        });
      }

      function confirmArchive(id) {
        Swal.fire({
          title: "Archive coupon?",
          text: "Are you sure you want to archive this coupon?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, archive it!",
          cancelButtonText: "Cancel"
        }).then(result => {
          if (result.isConfirmed) {
            fetch(`/admin/archiveCoupon?id=${id}`, {
              method: 'GET',
              headers: {
                'Accept': 'application/json'
              }
            })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                Swal.fire("Archived!", data.message, "success");
                setTimeout(() => location.reload(), 1500);
              } else {
                Swal.fire("Failed", data.message, "error");
              }
            })
            .catch(err => {
              Swal.fire("Error", "Network error occurred.", "error");
            });
          }
        });
      }


      function loadCouponToForm(coupon) {

        document.getElementById('coupon-form').action = "/admin/editCoupon/" + coupon._id;
        document.getElementById('coupon-form').onsubmit = handleFormSubmission;

        document.getElementById('form-card').innerText = "Update Coupon : " + coupon.couponCode;
        document.getElementById('btn-submit').innerText = "Update Coupon";
        
        

        document.getElementById('coupon_code').disabled = true;

        document.getElementById("coupon_code").value = coupon.couponCode;
        document.getElementById("coupon_type").value = coupon.couponType;
        document.getElementById("discount_value").value = coupon.discountAmount;
        document.getElementById("min_amount").value = coupon.minPurchaseAmount;
        document.getElementById("max_discount").value = coupon.maxDiscountAmount;
        if (coupon.couponType === "fixed") {
            document.getElementById("max_discount").disabled = true;
        } else {
            document.getElementById("max_discount").disabled = false;
        }
        document.getElementById("usage_limit").value = coupon.usageLimit;
        document.getElementById("expiry_date").value = coupon.expiryDate.split('T')[0];

        couponTypeSelect.addEventListener("change", function () {
                if (this.value === "fixed") {
                maxDiscountInput.disabled = true;
                maxDiscountInput.value = "";
                } else {
                maxDiscountInput.disabled = false;
                }
            });

      }


      function searchSubmit(event) {
        event.preventDefault();
        const val = document.getElementById('searchInput').value.trim();
        localStorage.setItem("showClearBtnCoupons", val ? "true" : "");
        document.getElementById('searchForm').submit();
      }

      document.getElementById('clear-btn').addEventListener('click', () => {
        document.getElementById('searchInput').value = '';
        localStorage.removeItem("showClearBtnCoupons");
        document.getElementById('searchForm').submit();
      });

      document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('clear-btn').style.display = localStorage.getItem("showClearBtnCoupons") === "true" ? "block" : "none";
      });



    </script>
  </div>
</div>
