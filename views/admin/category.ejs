<%-include("../../views/partials/admin/header")%>

<style>
      .error-message {
      color: red;
      text-align: center;
    }
</style>
<link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.min.css" />
    
<div class="content">
  <div class="panel-header bg-primary-gradient">
    <div class="page-inner py-5">
      <div class="d-flex align-items-left align-items-md-center justify-content-between flex-column flex-md-row">
        <div>
          <h2 class="text-white pb-2 fw-bold">Category Management</h2>
            <h5 class="text-white op-7 mb-2">Manage categories effectively</h5>
        </div>
        <nav class="nav-search p-0 d-none d-lg-flex">
          <form class="input-group" action="/admin/category" method="get" id="searchForm" onsubmit="searchSubmit(event)">
            <div class="input-group-prepend">
              <button type="submit" class="btn btn-search pe-1">
                <i class="fa fa-search search-icon"></i>
              </button>
            </div>
            <input
              id="searchInput"
              name="search"
              type="text"
              placeholder="Search ..."
              class="form-control"
            />
          </form>
        </nav>
      </div>
    </div>
  </div>

          <div class="row mt--3 mx-3">
      
            <!-- Total Customers -->
            <div class="col-sm-6 col-md-3">
              <div class="card card-stats card-round">
                <div class="card-body">
                  <div class="row align-items-center">
                    <div class="col-icon">
                      <div class="icon-big text-center icon-primary bubble-shadow-small">
                        <i class="fas fa-layer-group"></i>
                      </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                      <div class="numbers">
                        <p class="card-category">Total Categories</p>
                        <h4 class="card-title">30</h4>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
        
            <!-- Low Stock -->
            <div class="col-sm-6 col-md-3">
              <div class="card card-stats card-round">
                <div class="card-body">
                  <div class="row align-items-center">
                    <div class="col-icon">
                      <div class="icon-big text-center icon-success bubble-shadow-small">
                        <i class="fas fa-list"></i>
                      </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                      <div class="numbers">
                        <p class="card-category">Listed Categories</p>
                        <h4 class="card-title">30</h4>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
        
            <!-- Out of Stock -->
            <div class="col-sm-6 col-md-3">
              <div class="card card-stats card-round">
                <div class="card-body">
                  <div class="row align-items-center">
                    <div class="col-icon">
                      <div class="icon-big text-center icon-warning bubble-shadow-small">
                        <i class="fas fa-eye-slash"></i>
                      </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                      <div class="numbers">
                        <p class="card-category">Unlisted Categories</p>
                        <h4 class="card-title">20</h4>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
        
            <!-- Total Products -->
            <div class="col-sm-6 col-md-3">
              <div class="card card-stats card-round">
                <div class="card-body">
                  <div class="row align-items-center">
                    <div class="col-icon">
                      <div class="icon-big text-center icon-danger bubble-shadow-small">
                        <i class="fas fa-archive"></i>
                      </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                      <div class="numbers">Archived Categories</p>
                        <h4 class="card-title">100</h4>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="page-inner">

            

            <div class="row">
                <div class="col-md-9">
                    <div class="card card-round">
                        <div class="card-header d-flex justify-content-between">
                            <div class="card-head-row card-tools-still-right">
                                <div class="card-title">Category Details</div>
                            </div>
                            <button class="btn btn-primary" id="clear-btn">Clear search</button>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table align-items-center mb-0">
                                    <thead class="thead-light">
                                        <tr>
                                            <th scope="col" class="text-start">Category</th>
                                            <th scope="col" class="text-start">Description</th>
                                            <th scope="col" class="text-center">Status</th>
                                            <th scope="col" class="text-center">Offer</th>
                                            <th scope="col" class="text-center">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <%category.forEach((cat,ind) => {%>

                                        <tr>
                                            <td class="text-start">
                                              <img style="width: 100%; max-width: 60px; border-radius: 5%;" src="<%= cat.photo %>" alt="">
                                              <%=cat.name%>
                                            </td>
                                            <td class="text-start"><%=cat.description%></td>
                                            <td class="text-center">
                                              <%if(cat.isListed){%>
                                                <button class="badge badge-success">Listed</button>
                                                <i class="fas fa-sync ms-2 text-dark" onclick="confirmUnlist('<%=cat._id%>')"></i>
                                                <%}else{%>
                                                  <button class="badge badge-danger">Unlisted</button>
                                                    <i class="fas fa-sync ms-2 text-dark" onclick="confirmList('<%=cat._id%>')"></i>
                                                  <%}%>
                                            </td>
                                            <td class="text-center">10% OFF</td>
                                            <td class="text-start">
                                              <button class="badge bg-primary rounded-pill" onclick="loadEditCategory('<%=cat._id%>','<%= cat.name %>', '<%= cat.description %>', '<%= cat.photo %>')">
                                                <i class="fas fa-pencil-alt mx-2"> Edit</i>
                                              </button><br>
                                                <button class="badge rounded-pill bg-danger" onclick="confirmArchive('<%=cat._id%>')"><i class="fas fa-archive mx-2 "> Archive</i></button><br>
                                                <button onclick="manageOffers('<%= cat._id %>')" class="badge rounded-pill bg-success">
                                                    <i class="fa fa-percent mx-2"> Offer</i>
                                                  </button>
                                            </td>
                                        </tr>

                                        <%})%>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
    
                <!-- Right Side: Form (3 columns) -->
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title" id="formTitle">Create Category</h5>
                            <form id="categoryForm" enctype="multipart/form-data" onsubmit="return handleFormSubmission(event) ">
                                <input type="hidden" id="categoryId" name="categoryId">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label"> Name</label>
                                    <input type="text" name="name" placeholder="Type here" class="form-control" id="category" />
                                    <div id="name-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" name="description" class="form-control" id="description"></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                  <label for="form-label">Photo</label><br>
                                  <input type="file" name="photo" id="categoryPhoto" onchange="previewPhoto()">
                                  <img id="photoPreview" src="#" alt="Photo Preview" style="width: 120px; height: 120px; border-radius: 7.5%; object-fit: cover; margin-top: 10px; display: none;">
                                  <div id="photo-error" class="error-message"></div>
                                </div>
                                <div class="d-grid">
                                    <button class="btn btn-primary" type="submit">Create Category</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
    
            </div> <!-- End Row -->

                </div>
            </div>
        
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mb-20">
                        <% for (let i = 1; i <= totalPages; i++) { %> 
                            <li class="page-item <%=(i === currentPage) ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %><% if (searchQuery) { %>&search=<%= searchQuery %><% } %>">
                                    <%= i %>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
    
    <script>

    function previewPhoto() {
        const input = document.getElementById('categoryPhoto');
        const file = input.files[0];
        const photoPreview = document.getElementById('photoPreview');

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                photoPreview.src = e.target.result;
                photoPreview.style.display = 'block';
            };
            reader.readAsDataURL(file);
        }
    }

    function handleFormSubmission(event){
      event.preventDefault();
      if(!validateForm()){
          return;
      }

      const name = document.getElementById("category").value.trim(); 
      const description = document.getElementById("description").value.trim();
      const categoryId = document.getElementById('categoryId').value.trim();

      const input = document.getElementById('categoryPhoto');
      const file = input.files[0];

      const formData = new FormData();
      formData.append('name', name);
      formData.append('description', description);
      if (file) {
          formData.append('photo', file);
      }

      let url = '/admin/addCategory';
      if (categoryId) {
          formData.append('categoryId', categoryId);
          url = `/admin/editCategory/${categoryId}`; 
      }

      console.log('formDAta : ',formData)
      console.log('url ; ',url)

      fetch(url, {
          method: 'POST',
          body: formData
      })
      .then(response => {
          if(!response.ok){
              return response.json().then(err => { throw new Error(err.error); })
          }
          return response.json();
      })
      .then(data => {
          Swal.fire({
          icon: "success",
          title: "Success",
          text: data.message
          }).then(() => {
          location.reload();
          });
      })
      .catch(error => {
          Swal.fire({
              icon : "error",
              title : "Oops",
              text : error.message
          });
      });
    }


        function validateForm(){
            clearErrorMessages();
            const name = document.getElementById("category").value.trim();
            const description = document.getElementById("description").value.trim();
            isValid = true;
            
            if(name === ""){
                displayErrorMessage("name-error","Please enter a name")
                isValid = false;
            }else if(!/^[A-Za-z\s]+$/.test(name)){
                displayErrorMessage("name-error","Categoty name should contain only alphabets");
                isValid = false
            }

            if(description === ''){
                displayErrorMessage("description-error","Please enter a description");
                isValid = false
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
          let errorElement = document.getElementById(elementId);
          errorElement.innerText = message;
          errorElement.style.display = "block";
      }



        function clearErrorMessages(){
            const errorElements = document.getElementsByClassName("error-message");
            Array.from(errorElements).forEach((elem) => {
                elem.innerHTML = '';
                elem.style.display = 'none'
            })
        }
        
        function confirmUnlist(userId){
          Swal.fire({
            title: "Are you sure?",
            text: "This user will be unlisted!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Unlist"
        }).then((result) => {
            if (result) {
                window.location.href = `/admin/unlistCategory?id=${userId}`;
            }
        });
        }

        function confirmList(userId) {
        Swal.fire({
            title: "Are you sure?",
            text: "This user will be Listed!",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#28a745",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "List"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/admin/listCategory?id=${userId}`;
            }
        });
    }

    function confirmArchive(userId){
          Swal.fire({
            title: "Are you sure?",
            text: "This category will be archived!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Archive"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/admin/archiveCategory?id=${userId}`;
            }
        });
        }


    function searchSubmit(event) {
        event.preventDefault();  
        let searchValue = document.getElementById('searchInput').value.trim();
        if (searchValue !== "") {
            localStorage.setItem("showClearBtnCustomers", "true");
        } else {
            localStorage.removeItem("showClearBtnCustomers");
        }
        document.getElementById('searchForm').submit(); 
    }

    document.getElementById('clear-btn').addEventListener('click', function() {
        document.getElementById('searchInput').value = '';
        localStorage.removeItem("showClearBtnCustomers");
        document.getElementById('searchForm').submit();
    });

    document.addEventListener('DOMContentLoaded',() => {
        if (localStorage.getItem("showClearBtnCustomers") === "true") {
            document.getElementById('clear-btn').style.display = 'block';
        } else {
            document.getElementById('clear-btn').style.display = 'none';
        }
    }
  )


        const categoryOffersData = <%- JSON.stringify(categoryOffers) %>;
        const activeOfferMap = <%- JSON.stringify(activeOfferMap) %>;

        function manageOffers(categoryId) {
            const activeOffer = activeOfferMap[categoryId] || null;
            const activeOfferId = activeOffer ? activeOffer._id : null;

          Swal.fire({
            title: 'Manage Category Offer',
            html: `
              <style>
                .swal2-popup .swal2-input, 
                .swal2-popup .swal2-select {
                  width: 100% !important;
                  padding: 10px;
                  margin: 8px 0;
                  font-size: 1rem;
                  border-radius: 8px;
                  border: 1px solid #ccc;
                }
              </style>
              <select id="offer" class="swal2-select">
                <option value="" disabled ${!activeOfferId ? 'selected' : ''}>Select a Category Offer</option>
                ${categoryOffersData.map(offer => `
                  <option value="${offer._id}" ${offer._id === activeOfferId ? 'selected' : ''}>
                    ${offer.title}
                  </option>
                `).join('')}
              </select>
            `,
            showCancelButton: true,
            showDenyButton: true,
            confirmButtonText: 'Activate',
            denyButtonText: 'Deactivate',
            preConfirm: () => {
              const offerSelect = document.getElementById('offer');
              const offerId = offerSelect.value;

              if (!offerId) {
                Swal.showValidationMessage('Please select an offer');
              }

              return { categoryId, offerId };
            }
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/admin/activateCategoryOffer`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(result.value)
              })
              .then(res => res.json())
              .then(data => {
                if (data.success) {
                  Swal.fire('Success!', data.message, 'success').then(() => {
                    window.location.reload();
                  });
                } else {
                  Swal.fire('Error!', data.message, 'error');
                }
              });
            } else if (result.isDenied) {
              Swal.fire({
                title: 'Are you sure?',
                text: `This will remove the currently selected offer from this category.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Deactivate',
                cancelButtonText: 'Cancel'
              }).then((confirmResult) => {
                if (confirmResult.isConfirmed) {
                  fetch(`/admin/deactivateCategoryOffer`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ categoryId, activeOfferId })
                  })
                  .then(res => res.json())
                  .then(data => {
                    if (data.success) {
                      Swal.fire('Offer Deactivated', data.message, 'success').then(() => {
                        window.location.reload();
                      });
                    } else {
                      Swal.fire('Error!', data.message, 'error');
                    }
                  });
                }
              });
            }
          });
        }

        function loadEditCategory(id, name, description, photoUrl) {
          document.getElementById('formTitle').innerText = 'Edit Category';
          document.querySelector('#categoryForm button[type="submit"]').textContent = 'Update'
          document.getElementById('category').value = name;
          document.getElementById('description').value = description;
          document.getElementById('categoryId').value = id;

          const photoPreview = document.getElementById('photoPreview');
          if (photoUrl) {
              photoPreview.src = photoUrl;
              photoPreview.style.display = 'block';
          } else {
              photoPreview.style.display = 'none';
          }
      }

    </script>
  </body>
</html>
